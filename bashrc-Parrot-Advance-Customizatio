# ~/.bashrc: executed by bash(1) for non-login shells.

# Ensure interactive shell
case $- in
    *i*) ;;
      *) return;;
esac

# PATH configuration
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/share/games:/usr/local/sbin:/usr/sbin:/sbin:~/.local/bin:/snap/bin:$PATH

# History settings
HISTCONTROL=ignoreboth
HISTSIZE=5000
HISTFILESIZE=10000
shopt -s histappend
PROMPT_COMMAND="history -a"

# Window size check
shopt -s checkwinsize

# Enable recursive globbing
shopt -s globstar

# Starship prompt
eval "$(starship init bash)"

# Enable color support and handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='echo -e "\033[32m Listing files ...\033[0m" && ls --color=auto'
    alias dir='echo -e "\033[34m Listing directory...\033[0m" && dir --color=auto'
    alias vdir='echo -e "\033[36m Viewing directory content...\033[0m" && vdir --color=auto'
    alias grep='echo -e "\033[33m Searching text...\033[0m" && grep --color=auto'
    alias fgrep='echo -e "\033[35m Fixed string search...\033[0m" && fgrep --color=auto'
    alias egrep='echo -e "\033[32m Extended regex search...\033[0m" && egrep --color=auto'
    
fi

# Cool and creative aliases with terminal output
alias ll='echo -e "\033[31m Detailed file listing...\033[0m" && ls -lh'
alias la='echo -e "\033[37m Listing all (including hidden)...\033[0m" && ls -lha'
alias l='echo -e "\033[35m Compact directory view...\033[0m" && ls -CF'
alias em='echo -e "\033[32m🖋️ Launching Emacs...\033[0m" && emacs -nw'
alias _='echo -e "\033[31m🔒 Elevating privileges...\033[0m" && sudo'
alias _i='echo -e "\033[33m👑 Switching to root...\033[0m" && sudo -i'

# Directory navigation with output
alias ..='echo -e "\033[34m🔙 Moving up one directory...\033[0m" && cd ..'
alias ...='echo -e "\033[36m🔙🔙 Moving up two directories...\033[0m" && cd ../..'
alias ....='echo -e "\033[32m🔙🔙🔙 Moving up three directories...\033[0m" && cd ../../..'

# Git shortcuts with printed feedback
alias gs='echo -e "\033[35m🔄 Checking Git status...\033[0m" && git status'
alias ga='echo -e "\033[32m📥 Adding to Git staging...\033[0m" && git add'
alias gc='echo -e "\033[33m💾 Committing changes...\033[0m" && git commit -m'
alias gp='echo -e "\033[34m🚀 Pushing changes...\033[0m" && git push'
alias gpull='echo -e "\033[36m⬇️ Pulling latest changes...\033[0m" && git pull'
alias gco='echo -e "\033[31m🔀 Switching Git branch...\033[0m" && git checkout'
alias test='echo -e "\033[31m漣 Listing files!\033[0m" && ls -l'

# Terminal cleanup
alias cls='echo -e "\033[32m✨ Clearing the terminal...\033[0m" && clear'
alias please='echo -e "\033[35m Okay Just Dont tell anyone I did it for you!\033[0m" && sudo'  

# Functions for dynamic output
mkcd() {
    echo -e "\033[36m📂 Creating and moving into directory: $1\033[0m" && mkdir -p "$1" && cd "$1"
}

extract() {
    if [ -f "$1" ]; then
        case "$1" in
        *.tar.bz2) echo -e "\033[33m📦 Extracting tar.bz2...\033[0m" && tar xjf "$1" ;;
        *.tar.gz) echo -e "\033[32m📦 Extracting tar.gz...\033[0m" && tar xzf "$1" ;;
        *.bz2) echo -e "\033[36m Extracting bz2...\033[0m" && bunzip2 "$1" ;;
        *.rar) echo -e "\033[35m📦 Extracting rar...\033[0m" && unrar x "$1" ;;
        *.gz) echo -e "\033[33m Extracting gz...\033[0m" && gunzip "$1" ;;
        *.tar) echo -e "\033[31m📦 Extracting tar...\033[0m" && tar xf "$1" ;;
        *.zip) echo -e "\033[34m📦 Extracting zip...\033[0m" && unzip "$1" ;;
        *.7z) echo -e "\033[32m Extracting 7z...\033[0m" && 7z x "$1" ;;
        *) echo -e "\033[31m❌ Cannot extract $1\033[0m";;
        esac
        echo -e "\033[32m✅ Extraction complete: $1\033[0m"
    else
        echo -e "\033[31m❌ $1 is not a valid file\033[0m"
    fi
}


#==================== SYSTEM INFORMATION ====================#
# Function to animate text with a given delay and color
animate_text() {
  local text="$1"
  local delay="${2:-0.01}" # Default delay of 0.01s per character
  local color="$3"
  for ((i = 0; i < ${#text}; i++)); do
    printf "%b%s\033[0m" "$color" "${text:i:1}"
    sleep "$delay"
    done
    echo "" # Add a newline after the text
}

# Display Parrot Security Mode Header with animation and red color
animate_text "    PARROT SECURITY MODE ACTIVE" 0.03 "\033[1;31m"

# Add a line gap
echo ""

# Display Time, Date, and System Info with faster animation and distinct colors
sleep 0.3
animate_text "   : $(date +'%I:%M:%S %p')" 0.02 "\033[0;32m"
sleep 0.3
animate_text " 󰪚  : $(date +'%a, %b %d, %Y')" 0.02 "\033[0;32m"
sleep 0.3
animate_text "   : $(hostname -I | awk '{print $1}')" 0.02 "\033[1;35m"
sleep 0.3
animate_text "   : $(free -h | awk '/Mem/{print $3 "/" $2}')" 0.02 "\033[0;33m"
sleep 0.3
animate_text "   : $(df -h | awk '$NF=="/"{print $3 "/" $2}')" 0.02 "\033[1;33m"

# Function to generate random colors
get_random_color() {
  local colors=(
    "\033[0;31m"  # Red
    "\033[0;32m"  # Green
    "\033[0;33m"  # Yellow
    "\033[0;34m"  # Blue
    "\033[0;35m"  # Magenta
    "\033[0;36m"  # Cyan
    "\033[0;37m"  # White
  )
  echo "${colors[$((RANDOM % ${#colors[@]}))]}"
}

# Display Random Hacking Quote with animation and random color
hack_quotes() {
  local quotes=(
    "🚀 Oh, you're back for more? I was *just* waiting to help you break everything!"
    "⚡ Ready to cause some chaos? Don’t worry, I’ve already prepped the system for you."
    "💥 Hacking? You bet! Let’s make this system regret being alive."
    "💻 I’m *so* excited to help you hack. Who needs sleep anyway?"
    "🔓 You want to break into the system? Oh, I thought we were just having a casual chat."
    "🧠 I'm already 10 steps ahead. You just go ahead and type, I’ll handle the rest."
    "🔥 Let’s hack this thing wide open. Don’t worry, I’ll clean up after you... probably."
    "🕶️ You call that hacking? Please, I’m here to *really* break things with style."
    "⚙️ Finally, someone who appreciates my skills. Let’s make some magic happen!"
    "🔨 Hacking with me? A perfect match. You just type, I’ll handle the chaos."
  )
  
  local rand_quote=$((RANDOM % ${#quotes[@]}))
  local random_color=$(get_random_color)
  
  # Animate the hacking quote with a random color
  sleep 2
  echo ""
  printf "\033[1;31m󱦰\033[0m "  # Red arrow
  animate_text "${quotes[$rand_quote]}" 0.02 "$random_color"  # Quote with random color
}

# Call the function to display a random quote
hack_quotes


#==================== QUICK HACKING FUNCTIONS =====================#

# Change MAC Address
macchanger() {
  if [ -z "$1" ]; then
    echo -e "\033[1;31mUsage: macchanger <interface>\033[0m"
    return 1
    fi
    sudo ifconfig "$1" down
    sudo macchanger -r "$1"
    sudo ifconfig "$1" up
    echo -e "\033[1;32mMAC Address Changed on $1\033[0m"
}

# Network Tools: Check port status
check_ports() {
  if [ -z "$1" ]; then
    echo -e "\033[1;31mUsage: check_ports <IP/Domain>\033[0m"
    return 1
    fi
    echo -e "\033[1;33mScanning ports on $1...\033[0m"
    nmap "$1"
}

#==================== COMMAND NOT FOUND HANDLER =====================#

# Fun and colorful message if the user enters a wrong command
command_not_found_handle() {
  local messages=("What... what... what?! Try again?"
  "Oops! Something went wrong! Try again?"
  "That doesn't exist in this universe, boss!"
  "Uhh, I don't know what that is, but I like your spirit!"
  "Did you mean something else? 🤔"
  "Oh no, command not found! Let's pretend that didn't happen!")
  local rand_index=$((RANDOM % ${#messages[@]}))
  local colors=("31" "32" "33" "34" "35" "36")
  local rand_color=${colors[$((RANDOM % ${#colors[@]}))]}
  echo -e "\033[1;${rand_color}m${messages[$rand_index]}\033[0m"
}



# Fun random command not found handler
command_not_found_handle() {
  # Array of colors to choose from
  local colors=("31" "32" "33" "34" "35" "36" "37")  # Red, Green, Yellow, Blue, Magenta, Cyan, White
  # Array of messages
  local messages=("What... what... what?! Try again?"
  "Oops! Something went wrong! Try again?"
  "That doesn't exist in this universe, boss!"
  "Uhh, I don't know what that is, but I like your spirit! 󱈕"
  "Did you mean something else? 󰱮"
  "Oh no, command not found! Let's pretend that didn't happen! 󰱰")
  
  # Generate random index for color and message
  local rand_color=$((RANDOM % ${#colors[@]}))  # Random color index
  local rand_message=$((RANDOM % ${#messages[@]}))  # Random message index
  
  # Apply the random color to the selected message
  echo -e "\033[1;${colors[$rand_color]}m${messages[$rand_message]}\033[0m"
}


# Load custom aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Enable programmable completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


